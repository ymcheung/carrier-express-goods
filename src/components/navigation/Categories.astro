---
const response = await fetch(`https://6y29ruwn.apicdn.sanity.io/v2023-08-01/graphql/try/default`,
  {
    method: 'POST',
    headers: {
      Authorization: 'bearer skc7jRAVqdcapEwdZUuz5LYrbpFnwKq3r2GRMGjWc7HMbvIyitwqOCF9GYJCR40ESlBfrHqcapQW7byHN6fgYSJJrAdMjvAzQCQtLByhoxc0v2mxKLznKolfLy1zI2lej9eaS8ACQt9quvZLbW9VjiTAbX4jyhKZWGE1Spo6LoSvI7qpyi6m',
      'Content-Type':'application/json'
    },
    body: JSON.stringify({
      query: `
        query {
          allCategory(sort: { position: ASC }) {
            slug {
              current
            },
         	title,
            position
          }
        }
      `
    }),
  });

type categoryProps = {
  slug: {
    current: string
  },
  title: string
}
const json = await response.json();
const { allCategory } = json.data;

import SiteIcon from '@components/navigation/SiteIcon.astro';

const { categories: categoryName = '' } = Astro.params;
---

<nav>
  <ul class='list'>
    <li class={`listItem${categoryName === '' ? ' isActive' : ''}`}>
      <a class='link' href='/'><SiteIcon /> 首頁</a>
    </li>
    {
      allCategory.map(({ slug, title }: categoryProps) => (
        <li class={`listItem${slug.current === categoryName ? ' isActive' : ''}`}>
          <a class='link' href={`/${slug.current}`} data-astro-reload>
            {title}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<style lang='scss'>
  // nav {
  //   padding-inline-start: 1.6rem;
  //   padding-inline-end: 1.6rem;
  // }

  .list {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: minmax(max-content, auto);
    gap: 1.2rem;
    margin-block: 0;
    padding-inline-start: 1.6rem;
    padding-inline-end: 1.6rem;
    padding-block: 1.2rem;
    overflow-x: auto;

    @media screen and (min-width: 992px) {
      grid-auto-flow: row;
    }
  }

  .listItem {
    margin-inline-start: -0.8rem;
    // padding-block: 0.6rem;
    padding-inline-start: 1.2rem;
    list-style-type: none;
    border-radius: 0.6rem;
    border-width: 2px;
    border-style: solid;
    border-color: transparent;

    &:hover {
      border-color: var(--colorShade92);
    }

    &.isActive {
      background-color: var(--colorShade92);
      border-color: var(--colorShade92);

      .link {
        pointer-events: none;
      }
    }
  }

  .link {
    display: block;
    padding-block: 0.8rem;
    padding-inline-end: 1.2rem;
    color: var(--colorShade40);
    font-size: 1.6rem;
    line-height: 2;
    letter-spacing: 0.1rem;
    text-decoration: none;
  }
</style>
