---
import { categories } from '../../constants';
import 'node_modules/normalize.css/normalize.css';
import '@styles/global.scss';
import '@fontsource-variable/rubik';
import BaseHead from '@components/BaseHead.astro';
import CategoryNavigation from '@components/navigation/Categories.astro';
import SlugNavigation from '@components/navigation/Slugs.astro';
import Footer from '@components/Footer.astro';

interface Props {
  title: string;
  cover?: {
    src: string;
    width: number;
    height: number;
    format: string;
  };
  description: string;
  dateModified: string;
  datePublished: string;
}

const { categories: categoryName, slug } = Astro.params;

const { title, description, dateModified, datePublished } =
  Astro.props as Props;

const categoryLabel = categories.find(
  ({ name }) => name === categoryName
)?.label;

const pageTitle = `${title} (${categoryLabel})`;
---

<!DOCTYPE html>
<html lang='zh-TW'>
  <head>
    <BaseHead
      title={pageTitle}
      description={description}
      dateModified={dateModified}
      datePublished={datePublished}
    />
  </head>
  <body class='home'>
    <header>
      <CategoryNavigation />
    </header>
    <main>
      <div class='mainLayout'>
        <SlugNavigation categoryName={categoryName} transition:persist />
        <div>
          <article>
            <!-- <Image src={cover.src} alt={title} /> -->
            <slot />
          </article>
        </div>
      </div>
    </main>
    <Footer />
    <style lang='scss'>
      .home {
        display: grid;
        grid: auto 1fr auto / 100vw;

        @media screen and (min-width: 992px) {
          grid:
            'header .' auto
            'header footer' 160px / 160px 1fr;
        }
      }

      header {
        margin-block-end: 1.6rem;
        // padding-inline-start: 1.6rem;
        background-color: var(--color-shade96);

        @media screen and (min-width: 992px) {
          grid-area: header;
          margin-block-end: 0;
        }
      }

      main {
        padding-inline-start: 1.6rem;
        padding-inline-end: 1.6rem;

        @media screen and (min-width: 992px) {
          min-height: 100vh;
          padding-inline-start: 0;
          padding-inline-end: 0;
        }
      }

      .mainLayout {
        @media screen and (min-width: 992px) {
          display: grid;
          grid: auto / auto 1fr;
          height: 100%;
        }
      }

      article {
        max-width: 672px;
        margin-inline: auto;

        @media screen and (min-width: 992px) {
          padding-inline: 1.6rem;
        }

        :global(p) {
          margin-block-start: 0;
          font-size: clamp(1.8rem, 1.75vw + 1rem, 2.4rem);
          line-height: 1.5;
        }
      }
    </style>
  </body>
</html>
