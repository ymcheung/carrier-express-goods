---
import { z } from 'zod';
import { postSchema } from '../schemas';
import 'node_modules/normalize.css/normalize.css';
import '@styles/global.scss';
import '@fontsource-variable/rubik';
import BaseHead from '@components/BaseHead.astro';
import CategoriesNavigation from '@components/navigation/Categories.astro';
import Footer from '@components/Footer.astro';

const categoryLayoutProps = postSchema
  .pick({
    title: true,
    description: true,
    _updatedAt: true,
    _createdAt: true
  })
  .transform(({ _updatedAt, _createdAt, ...rest }) => ({
    // categoryTitle: category.title,
    dateModified: _updatedAt,
    datePublished: _createdAt,
    ...rest
  }));

type CategoryProps = z.infer<typeof categoryLayoutProps>;

const { title, description, dateModified, datePublished } =
  Astro.props as CategoryProps;
---

<!doctype html>
<html lang="zh-TW">
  <head>
    <BaseHead
      title={title}
      description={description}
      dateModified={dateModified}
      datePublished={datePublished}
    />
  </head>
  <body class="home">
    <header>
      <CategoriesNavigation />
    </header>
    <main>
      <div class="mainLayout">
        <slot />
      </div>
    </main>
    <Footer />
    <style lang="scss">
      .home {
        display: grid;
        grid: auto 1fr auto / 100vw;

        @media screen and (min-width: 992px) {
          grid:
            'header .' 1fr
            'header footer' auto / 160px 1fr;
        }
      }

      header {
        margin-block-end: 1.6rem;
        // padding-inline-start: 1.6rem;
        background-color: var(--colorShade96);

        @media screen and (min-width: 992px) {
          grid-area: header;
          margin-block-end: 0;
        }
      }

      main {
        padding-inline-start: 1.6rem;
        padding-inline-end: 1.6rem;

        @media screen and (min-width: 992px) {
          padding-inline-start: 0;
          padding-inline-end: 0;
        }
      }

      .mainLayout {
        @media screen and (min-width: 992px) {
          display: grid;
          grid: auto / auto 1fr;
          height: 100%;
        }
      }
    </style>
  </body>
</html>
